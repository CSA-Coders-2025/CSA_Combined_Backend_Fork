The "person" folder contains entities related to the "Person" entity.

It has 3 kinds of classes: 
1- Enitities
2- Controllers
3- Jpa Repositories

/////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////

The "Person" Enitity is main class for the users.
    columns: 
        (Long) id //autogenerated when person is created
        (String) password //confuscated during most actions
        (String) uid //username (can be github or email)
        (String) email
        (String) name
        (Date) dob //date of birth
        (String) pfp //profile picture (as a Base64 string)
        (Boolean) kasmServerNeeded
        (String) sid //student id
        (String) balance //usually used as a Double, but stored in the db as a String
        (Map) stats //currently unused, mad to save data in a json format

    Relationships:
        (One to Many) grades //(Synergy Grades)
        (Many to Many) submissions //(Assignment Submissions)
        (Many to Many) sections //for user classes (CSA,CSSE,CSP)
        (Many to Many) roles
        (One to One) timeEntries //for Tinkle stuff
        (One to One) studentInfo //stores more info about person
        (One to One) user_stocks //infomration about the user's stocks
        (Many to Many) groups

    Methods:
        (double) getBalanceDouble() //gets the user's balance as a double
        (int) getAge() //gets the user's age using their dob and the local date/timeEntries
        (String) setBalanceString(double) //updates the user's balance and returns the updated String
        (void) removePersonFromSubmission //when the user's account is deleted, this method 
            removes all related submissions from the user
        (boolean) hasRoleWithName(String) //searches for a matching role from the user's roles
        (int) compareTo(Person) //compares person objects using the name feild.
            I think returns it returns 0 if the names are the same, >0 or <0 otherwise
        (Person[]) init() //returns the default generated persons for the object (toby, niko, ect.)
        (String) toString() //overrides the default Object toString method for a more readable output
        (void) main() //gets the default person objects from init, then outputs them using toString()


